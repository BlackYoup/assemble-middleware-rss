var path = require('path');
var url = require('url');

var chalk = require('chalk');
var moment = require('moment');
var rss = require('rss');

module.exports = function(config, callback) {

  'use strict';

  var options = config.context;
  var grunt = config.grunt;
  var pkg = grunt.file.readJSON(path.join(process.cwd(), 'package.json'));
  var feed = options.feed || {};
  
  var pages = options.pages;
  var page = options.page;
  
  var async = grunt.util.async;
  var _ = grunt.util._;

  var utils = require('./lib/utils');

  // Moment.js default language
  moment.lang(feed.language || 'en');

  // Skip over the plugin if it isn't defined in the options.
  if(!_.isUndefined(feed)) {

    var failFeed = function(prop) {
      if(feed.logging) {
        return grunt.fail.fatal(
          ('"feed: ' + prop + '"').yellow + 
          ' not defined in gruntfile.js for RSS feed.'.bold
        );
      } else {
        return;
      }
    }
    
    var copyright = 'Copyright' + moment().format("YYYY") + ' ' + pkg.author.name;

    var feed = new rss({
      generator: feed.generator || 'Generated by Assemble.js.',
      lastBuildDate: moment().format("dddd, MMMM Do YYYY"),
      title: feed.title || pkg.name,
      description: feed.description || pkg.description,
      pubdate: feed.pubdate,
      site_url: feed.siteurl || pkg.homepage,
      feed_url: feed.feedurl || url.resolve(pkg.homepage, feed.dest || 'feed.xml'),
      image_url: feed.imageurl,
      author: feed.author || pkg.author.name || failFeed('author'),
      managingEditor: feed.managingEditor,
      webMaster: feed.webMaster,
      categories: feed.categories,
      docs: feed.docs,
      copyright: feed.copyright || '',
      language: feed.language || 'en',
      ttl: feed.ttl || '60',
      geoRSS: feed.geoRSS || false
    });
    
  }
};
